{"version":3,"file":"/home/usuario/DSI/P6/src/ejercicio-3/basic.ts","sources":["/home/usuario/DSI/P6/src/ejercicio-3/basic.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAsB,yBAAyB;IAC3C;;;OAGG;IACH,YAAsB,KAAU;QAAV,UAAK,GAAL,KAAK,CAAK;IAChC,CAAC;IASD;;;OAGG;IACH,OAAO,CAAC,OAAU;QACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAOD;;;OAGG;IACH,gBAAgB;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC7B,CAAC;CACJ;AAnCD,8DAmCC","sourcesContent":["import {Searchable} from \"./searchable\";\n\n/**\n * Clase que representa una colección de elementos que se pueden transmitir y buscar\n */\nexport abstract class BasicStreamableCollection<T> implements Searchable<T> {\n    /**\n     * Crea una nueva instancia de una colección que se puede transmitir\n     * @param items Colección de artículos\n     */\n    constructor(protected items: T[]) {\n    }\n\n    /**\n     * Permite buscar elementos por un valor como título, año, etc.\n     * @param param El parámetro por el que desea buscar\n     * @param value El valor del parámetro\n     */\n    abstract searchBy(param: string, value: string): T[];\n\n    /**\n     * Permite insertar un nuevo elemento a la colección \n     * @param newItem Elemento que queremos insertar\n     */\n    addItem(newItem: T) {\n        this.items.push(newItem);\n    }\n\n    /**\n     * Devuelve la colección\n     */\n    abstract getItems(): T[];\n\n    /**\n     * Obtiene la duración de la colección\n     * @returns Duración de la colección\n     */\n    getNumberOfItems() {\n        return this.items.length;\n    }\n} "]}