"use strict";function cov_67nz22n4v(){var path="/home/usuario/DSI/P6/src/ejercicio-2/velocidad.ts";var hash="341f4324847b155d2f34c3e8184030ebfc82b820";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/usuario/DSI/P6/src/ejercicio-2/velocidad.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:27}},"2":{start:{line:15,column:21},end:{line:15,column:28}},"3":{start:{line:16,column:8},end:{line:39,column:9}},"4":{start:{line:17,column:12},end:{line:22,column:13}},"5":{start:{line:18,column:16},end:{line:18,column:64}},"6":{start:{line:20,column:17},end:{line:22,column:13}},"7":{start:{line:21,column:16},end:{line:21,column:69}},"8":{start:{line:24,column:13},end:{line:39,column:9}},"9":{start:{line:25,column:12},end:{line:30,column:13}},"10":{start:{line:26,column:16},end:{line:26,column:69}},"11":{start:{line:28,column:17},end:{line:30,column:13}},"12":{start:{line:29,column:16},end:{line:29,column:69}},"13":{start:{line:32,column:13},end:{line:39,column:9}},"14":{start:{line:33,column:12},end:{line:38,column:13}},"15":{start:{line:34,column:16},end:{line:34,column:68}},"16":{start:{line:36,column:17},end:{line:38,column:13}},"17":{start:{line:37,column:16},end:{line:37,column:69}},"18":{start:{line:40,column:8},end:{line:40,column:22}},"19":{start:{line:43,column:0},end:{line:43,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:18},end:{line:8,column:21}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:4},end:{line:14,column:5}},loc:{start:{line:14,column:18},end:{line:41,column:5}},line:14}},branchMap:{"0":{loc:{start:{line:16,column:8},end:{line:39,column:9}},type:"if",locations:[{start:{line:16,column:8},end:{line:39,column:9}},{start:{line:16,column:8},end:{line:39,column:9}}],line:16},"1":{loc:{start:{line:17,column:12},end:{line:22,column:13}},type:"if",locations:[{start:{line:17,column:12},end:{line:22,column:13}},{start:{line:17,column:12},end:{line:22,column:13}}],line:17},"2":{loc:{start:{line:20,column:17},end:{line:22,column:13}},type:"if",locations:[{start:{line:20,column:17},end:{line:22,column:13}},{start:{line:20,column:17},end:{line:22,column:13}}],line:20},"3":{loc:{start:{line:24,column:13},end:{line:39,column:9}},type:"if",locations:[{start:{line:24,column:13},end:{line:39,column:9}},{start:{line:24,column:13},end:{line:39,column:9}}],line:24},"4":{loc:{start:{line:25,column:12},end:{line:30,column:13}},type:"if",locations:[{start:{line:25,column:12},end:{line:30,column:13}},{start:{line:25,column:12},end:{line:30,column:13}}],line:25},"5":{loc:{start:{line:28,column:17},end:{line:30,column:13}},type:"if",locations:[{start:{line:28,column:17},end:{line:30,column:13}},{start:{line:28,column:17},end:{line:30,column:13}}],line:28},"6":{loc:{start:{line:32,column:13},end:{line:39,column:9}},type:"if",locations:[{start:{line:32,column:13},end:{line:39,column:9}},{start:{line:32,column:13},end:{line:39,column:9}}],line:32},"7":{loc:{start:{line:33,column:12},end:{line:38,column:13}},type:"if",locations:[{start:{line:33,column:12},end:{line:38,column:13}},{start:{line:33,column:12},end:{line:38,column:13}}],line:33},"8":{loc:{start:{line:36,column:17},end:{line:38,column:13}},type:"if",locations:[{start:{line:36,column:17},end:{line:38,column:13}},{start:{line:36,column:17},end:{line:38,column:13}}],line:36}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},inputSourceMap:{version:3,file:"/home/usuario/DSI/P6/src/ejercicio-2/velocidad.ts",sources:["/home/usuario/DSI/P6/src/ejercicio-2/velocidad.ts"],names:[],mappings:";;;AAEA;;GAEG;AACH,MAAa,SAAS;IAElB,gBAAc,CAAC;IAEf;;;;OAIG;IACH,OAAO,CAAC,IAA8B;QAClC,IAAI,MAAM,GAAW,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAG,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE;YACjB,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE;gBACnB,MAAM,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACnD;iBAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE;gBACzB,MAAM,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACxD;SACJ;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE;YAC1B,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE;gBAClB,MAAM,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACxD;iBAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE;gBACzB,MAAM,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACxD;SACJ;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE;YACzB,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE;gBAClB,MAAM,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACvD;iBAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE;gBAC1B,MAAM,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACxD;SACJ;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AAhCD,8BAgCC",sourcesContent:["import {isConvertible} from './conversor';\n\n/**\n * Clase que representa unidades de medida de velocidad\n */\nexport class Velocidad implements isConvertible<[string, number, string]> {\n\n    constructor(){}\n\n    /**\n     * Realiza la conversi\xF3n de unidades\n     * @param dato unidad, valor de lo que vamos a camvertir y el 3er attr es a cual convertir\n     * @returns El valor convertido\n     */\n    convert(dato: [string, number, string]): number {\n        let result: number = dato[1];\n        if(dato[0] == 'm/s') {\n            if (dato[2] == 'km/h') {\n                result = parseFloat((dato[1] * 3.6).toFixed(3));\n            } else if (dato[2] == 'mph') {\n                result = parseFloat((dato[1] * 2.236936).toFixed(3));\n            }\n        } else if (dato[0] == 'km/h') {\n            if (dato[2] == 'm/s') {\n                result = parseFloat((dato[1] * 0.277778).toFixed(3));\n            } else if (dato[2] == 'mph') {\n                result = parseFloat((dato[1] * 0.621371).toFixed(3));\n            }\n        } else if (dato[0] == 'mph') {\n            if (dato[2] == 'm/s') {\n                result = parseFloat((dato[1] * 0.44704).toFixed(3));\n            } else if (dato[2] == 'km/h') {\n                result = parseFloat((dato[1] * 1.609344).toFixed(3));\n            }\n        }\n        return result;\n    }\n}"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"341f4324847b155d2f34c3e8184030ebfc82b820"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_67nz22n4v=function(){return actualCoverage;};}return actualCoverage;}cov_67nz22n4v();cov_67nz22n4v().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_67nz22n4v().s[1]++;exports.Velocidad=void 0;/**
 * Clase que representa unidades de medida de velocidad
 */class Velocidad{constructor(){cov_67nz22n4v().f[0]++;}/**
     * Realiza la conversi√≥n de unidades
     * @param dato unidad, valor de lo que vamos a camvertir y el 3er attr es a cual convertir
     * @returns El valor convertido
     */convert(dato){cov_67nz22n4v().f[1]++;let result=(cov_67nz22n4v().s[2]++,dato[1]);cov_67nz22n4v().s[3]++;if(dato[0]=='m/s'){cov_67nz22n4v().b[0][0]++;cov_67nz22n4v().s[4]++;if(dato[2]=='km/h'){cov_67nz22n4v().b[1][0]++;cov_67nz22n4v().s[5]++;result=parseFloat((dato[1]*3.6).toFixed(3));}else{cov_67nz22n4v().b[1][1]++;cov_67nz22n4v().s[6]++;if(dato[2]=='mph'){cov_67nz22n4v().b[2][0]++;cov_67nz22n4v().s[7]++;result=parseFloat((dato[1]*2.236936).toFixed(3));}else{cov_67nz22n4v().b[2][1]++;}}}else{cov_67nz22n4v().b[0][1]++;cov_67nz22n4v().s[8]++;if(dato[0]=='km/h'){cov_67nz22n4v().b[3][0]++;cov_67nz22n4v().s[9]++;if(dato[2]=='m/s'){cov_67nz22n4v().b[4][0]++;cov_67nz22n4v().s[10]++;result=parseFloat((dato[1]*0.277778).toFixed(3));}else{cov_67nz22n4v().b[4][1]++;cov_67nz22n4v().s[11]++;if(dato[2]=='mph'){cov_67nz22n4v().b[5][0]++;cov_67nz22n4v().s[12]++;result=parseFloat((dato[1]*0.621371).toFixed(3));}else{cov_67nz22n4v().b[5][1]++;}}}else{cov_67nz22n4v().b[3][1]++;cov_67nz22n4v().s[13]++;if(dato[0]=='mph'){cov_67nz22n4v().b[6][0]++;cov_67nz22n4v().s[14]++;if(dato[2]=='m/s'){cov_67nz22n4v().b[7][0]++;cov_67nz22n4v().s[15]++;result=parseFloat((dato[1]*0.44704).toFixed(3));}else{cov_67nz22n4v().b[7][1]++;cov_67nz22n4v().s[16]++;if(dato[2]=='km/h'){cov_67nz22n4v().b[8][0]++;cov_67nz22n4v().s[17]++;result=parseFloat((dato[1]*1.609344).toFixed(3));}else{cov_67nz22n4v().b[8][1]++;}}}else{cov_67nz22n4v().b[6][1]++;}}}cov_67nz22n4v().s[18]++;return result;}}cov_67nz22n4v().s[19]++;exports.Velocidad=Velocidad;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvdXN1YXJpby9EU0kvUDYvc3JjL2VqZXJjaWNpby0yL3ZlbG9jaWRhZC50cyIsInNvdXJjZXMiOlsiL2hvbWUvdXN1YXJpby9EU0kvUDYvc3JjL2VqZXJjaWNpby0yL3ZlbG9jaWRhZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQTs7R0FFRztBQUNILE1BQWEsU0FBUztJQUVsQixnQkFBYyxDQUFDO0lBRWY7Ozs7T0FJRztJQUNILE9BQU8sQ0FBQyxJQUE4QjtRQUNsQyxJQUFJLE1BQU0sR0FBVyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0IsSUFBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxFQUFFO1lBQ2pCLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLE1BQU0sRUFBRTtnQkFDbkIsTUFBTSxHQUFHLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNuRDtpQkFBTSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxLQUFLLEVBQUU7Z0JBQ3pCLE1BQU0sR0FBRyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDeEQ7U0FDSjthQUFNLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLE1BQU0sRUFBRTtZQUMxQixJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxLQUFLLEVBQUU7Z0JBQ2xCLE1BQU0sR0FBRyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDeEQ7aUJBQU0sSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxFQUFFO2dCQUN6QixNQUFNLEdBQUcsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3hEO1NBQ0o7YUFBTSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxLQUFLLEVBQUU7WUFDekIsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxFQUFFO2dCQUNsQixNQUFNLEdBQUcsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3ZEO2lCQUFNLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLE1BQU0sRUFBRTtnQkFDMUIsTUFBTSxHQUFHLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUN4RDtTQUNKO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztDQUNKO0FBaENELDhCQWdDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aXNDb252ZXJ0aWJsZX0gZnJvbSAnLi9jb252ZXJzb3InO1xuXG4vKipcbiAqIENsYXNlIHF1ZSByZXByZXNlbnRhIHVuaWRhZGVzIGRlIG1lZGlkYSBkZSB2ZWxvY2lkYWRcbiAqL1xuZXhwb3J0IGNsYXNzIFZlbG9jaWRhZCBpbXBsZW1lbnRzIGlzQ29udmVydGlibGU8W3N0cmluZywgbnVtYmVyLCBzdHJpbmddPiB7XG5cbiAgICBjb25zdHJ1Y3Rvcigpe31cblxuICAgIC8qKlxuICAgICAqIFJlYWxpemEgbGEgY29udmVyc2nDs24gZGUgdW5pZGFkZXNcbiAgICAgKiBAcGFyYW0gZGF0byB1bmlkYWQsIHZhbG9yIGRlIGxvIHF1ZSB2YW1vcyBhIGNhbXZlcnRpciB5IGVsIDNlciBhdHRyIGVzIGEgY3VhbCBjb252ZXJ0aXJcbiAgICAgKiBAcmV0dXJucyBFbCB2YWxvciBjb252ZXJ0aWRvXG4gICAgICovXG4gICAgY29udmVydChkYXRvOiBbc3RyaW5nLCBudW1iZXIsIHN0cmluZ10pOiBudW1iZXIge1xuICAgICAgICBsZXQgcmVzdWx0OiBudW1iZXIgPSBkYXRvWzFdO1xuICAgICAgICBpZihkYXRvWzBdID09ICdtL3MnKSB7XG4gICAgICAgICAgICBpZiAoZGF0b1syXSA9PSAna20vaCcpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBwYXJzZUZsb2F0KChkYXRvWzFdICogMy42KS50b0ZpeGVkKDMpKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF0b1syXSA9PSAnbXBoJykge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHBhcnNlRmxvYXQoKGRhdG9bMV0gKiAyLjIzNjkzNikudG9GaXhlZCgzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoZGF0b1swXSA9PSAna20vaCcpIHtcbiAgICAgICAgICAgIGlmIChkYXRvWzJdID09ICdtL3MnKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcGFyc2VGbG9hdCgoZGF0b1sxXSAqIDAuMjc3Nzc4KS50b0ZpeGVkKDMpKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF0b1syXSA9PSAnbXBoJykge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHBhcnNlRmxvYXQoKGRhdG9bMV0gKiAwLjYyMTM3MSkudG9GaXhlZCgzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoZGF0b1swXSA9PSAnbXBoJykge1xuICAgICAgICAgICAgaWYgKGRhdG9bMl0gPT0gJ20vcycpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBwYXJzZUZsb2F0KChkYXRvWzFdICogMC40NDcwNCkudG9GaXhlZCgzKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdG9bMl0gPT0gJ2ttL2gnKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcGFyc2VGbG9hdCgoZGF0b1sxXSAqIDEuNjA5MzQ0KS50b0ZpeGVkKDMpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn0iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VzdWFyaW8vRFNJL1A2L3NyYy9lamVyY2ljaW8tMi92ZWxvY2lkYWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjJvTkFnQlc7eU5BZFg7O0FBRUcsR0FDSCxLQUFhLENBQUEsU0FBUyxDQUVsQixXQUFBLEVBQUEsd0JBQWUsQ0FFZjs7OztBQUlHLE9BQ0gsT0FBTyxDQUFDLElBQUQsQ0FBK0Isd0JBQ2xDLEdBQUksQ0FBQSxNQUFNLHlCQUFXLElBQUksQ0FBQyxDQUFELENBQWYsQ0FBVixDQURrQyx1QkFFbEMsR0FBRyxJQUFJLENBQUMsQ0FBRCxDQUFKLEVBQVcsS0FBZCxDQUFxQixrREFDakIsR0FBSSxJQUFJLENBQUMsQ0FBRCxDQUFKLEVBQVcsTUFBZixDQUF1QixrREFDbkIsTUFBTSxDQUFHLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFELENBQUosQ0FBVSxHQUFYLEVBQWdCLE9BQWhCLENBQXdCLENBQXhCLENBQUQsQ0FBbkIsQ0FDSCxDQUZELElBRU8scURBQUksSUFBSSxDQUFDLENBQUQsQ0FBSixFQUFXLEtBQWYsQ0FBc0Isa0RBQ3pCLE1BQU0sQ0FBRyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBRCxDQUFKLENBQVUsUUFBWCxFQUFxQixPQUFyQixDQUE2QixDQUE3QixDQUFELENBQW5CLENBQ0gsQ0FGTSxnQ0FFTixDQUNKLENBTkQsSUFNTyxxREFBSSxJQUFJLENBQUMsQ0FBRCxDQUFKLEVBQVcsTUFBZixDQUF1QixrREFDMUIsR0FBSSxJQUFJLENBQUMsQ0FBRCxDQUFKLEVBQVcsS0FBZixDQUFzQixtREFDbEIsTUFBTSxDQUFHLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFELENBQUosQ0FBVSxRQUFYLEVBQXFCLE9BQXJCLENBQTZCLENBQTdCLENBQUQsQ0FBbkIsQ0FDSCxDQUZELElBRU8sc0RBQUksSUFBSSxDQUFDLENBQUQsQ0FBSixFQUFXLEtBQWYsQ0FBc0IsbURBQ3pCLE1BQU0sQ0FBRyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBRCxDQUFKLENBQVUsUUFBWCxFQUFxQixPQUFyQixDQUE2QixDQUE3QixDQUFELENBQW5CLENBQ0gsQ0FGTSxnQ0FFTixDQUNKLENBTk0sSUFNQSxzREFBSSxJQUFJLENBQUMsQ0FBRCxDQUFKLEVBQVcsS0FBZixDQUFzQixtREFDekIsR0FBSSxJQUFJLENBQUMsQ0FBRCxDQUFKLEVBQVcsS0FBZixDQUFzQixtREFDbEIsTUFBTSxDQUFHLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFELENBQUosQ0FBVSxPQUFYLEVBQW9CLE9BQXBCLENBQTRCLENBQTVCLENBQUQsQ0FBbkIsQ0FDSCxDQUZELElBRU8sc0RBQUksSUFBSSxDQUFDLENBQUQsQ0FBSixFQUFXLE1BQWYsQ0FBdUIsbURBQzFCLE1BQU0sQ0FBRyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBRCxDQUFKLENBQVUsUUFBWCxFQUFxQixPQUFyQixDQUE2QixDQUE3QixDQUFELENBQW5CLENBQ0gsQ0FGTSxnQ0FFTixDQUNKLENBTk0sZ0NBTU4sRUFwQmlDLHdCQXFCbEMsTUFBTyxDQUFBLE1BQVAsQ0FDSCxDQS9CaUIsQyx3QkFBdEIsT0FBQSxDQUFBLFNBQUEsQ0FBQSxTQUFBLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2lzQ29udmVydGlibGV9IGZyb20gJy4vY29udmVyc29yJztcblxuLyoqXG4gKiBDbGFzZSBxdWUgcmVwcmVzZW50YSB1bmlkYWRlcyBkZSBtZWRpZGEgZGUgdmVsb2NpZGFkXG4gKi9cbmV4cG9ydCBjbGFzcyBWZWxvY2lkYWQgaW1wbGVtZW50cyBpc0NvbnZlcnRpYmxlPFtzdHJpbmcsIG51bWJlciwgc3RyaW5nXT4ge1xuXG4gICAgY29uc3RydWN0b3IoKXt9XG5cbiAgICAvKipcbiAgICAgKiBSZWFsaXphIGxhIGNvbnZlcnNpw7NuIGRlIHVuaWRhZGVzXG4gICAgICogQHBhcmFtIGRhdG8gdW5pZGFkLCB2YWxvciBkZSBsbyBxdWUgdmFtb3MgYSBjYW12ZXJ0aXIgeSBlbCAzZXIgYXR0ciBlcyBhIGN1YWwgY29udmVydGlyXG4gICAgICogQHJldHVybnMgRWwgdmFsb3IgY29udmVydGlkb1xuICAgICAqL1xuICAgIGNvbnZlcnQoZGF0bzogW3N0cmluZywgbnVtYmVyLCBzdHJpbmddKTogbnVtYmVyIHtcbiAgICAgICAgbGV0IHJlc3VsdDogbnVtYmVyID0gZGF0b1sxXTtcbiAgICAgICAgaWYoZGF0b1swXSA9PSAnbS9zJykge1xuICAgICAgICAgICAgaWYgKGRhdG9bMl0gPT0gJ2ttL2gnKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcGFyc2VGbG9hdCgoZGF0b1sxXSAqIDMuNikudG9GaXhlZCgzKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdG9bMl0gPT0gJ21waCcpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBwYXJzZUZsb2F0KChkYXRvWzFdICogMi4yMzY5MzYpLnRvRml4ZWQoMykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGRhdG9bMF0gPT0gJ2ttL2gnKSB7XG4gICAgICAgICAgICBpZiAoZGF0b1syXSA9PSAnbS9zJykge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHBhcnNlRmxvYXQoKGRhdG9bMV0gKiAwLjI3Nzc3OCkudG9GaXhlZCgzKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdG9bMl0gPT0gJ21waCcpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBwYXJzZUZsb2F0KChkYXRvWzFdICogMC42MjEzNzEpLnRvRml4ZWQoMykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGRhdG9bMF0gPT0gJ21waCcpIHtcbiAgICAgICAgICAgIGlmIChkYXRvWzJdID09ICdtL3MnKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcGFyc2VGbG9hdCgoZGF0b1sxXSAqIDAuNDQ3MDQpLnRvRml4ZWQoMykpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChkYXRvWzJdID09ICdrbS9oJykge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHBhcnNlRmxvYXQoKGRhdG9bMV0gKiAxLjYwOTM0NCkudG9GaXhlZCgzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59Il19