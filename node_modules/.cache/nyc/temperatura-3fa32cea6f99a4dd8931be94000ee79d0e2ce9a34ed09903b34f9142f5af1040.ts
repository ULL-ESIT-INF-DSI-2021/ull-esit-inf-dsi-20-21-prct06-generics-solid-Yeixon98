"use strict";function cov_17unxe5ky0(){var path="/home/usuario/DSI/P6/src/ejercicio-2/temperatura.ts";var hash="ab54fdbe426bfaca05595ec19ba783c854eb3ab4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/usuario/DSI/P6/src/ejercicio-2/temperatura.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:29}},"2":{start:{line:15,column:21},end:{line:15,column:28}},"3":{start:{line:16,column:8},end:{line:39,column:9}},"4":{start:{line:17,column:12},end:{line:22,column:13}},"5":{start:{line:18,column:16},end:{line:18,column:69}},"6":{start:{line:20,column:17},end:{line:22,column:13}},"7":{start:{line:21,column:16},end:{line:21,column:67}},"8":{start:{line:24,column:13},end:{line:39,column:9}},"9":{start:{line:25,column:12},end:{line:30,column:13}},"10":{start:{line:26,column:16},end:{line:26,column:80}},"11":{start:{line:28,column:17},end:{line:30,column:13}},"12":{start:{line:29,column:16},end:{line:29,column:67}},"13":{start:{line:32,column:13},end:{line:39,column:9}},"14":{start:{line:33,column:12},end:{line:38,column:13}},"15":{start:{line:34,column:16},end:{line:34,column:84}},"16":{start:{line:36,column:17},end:{line:38,column:13}},"17":{start:{line:37,column:16},end:{line:37,column:71}},"18":{start:{line:40,column:8},end:{line:40,column:22}},"19":{start:{line:43,column:0},end:{line:43,column:34}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:18},end:{line:8,column:21}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:4},end:{line:14,column:5}},loc:{start:{line:14,column:18},end:{line:41,column:5}},line:14}},branchMap:{"0":{loc:{start:{line:16,column:8},end:{line:39,column:9}},type:"if",locations:[{start:{line:16,column:8},end:{line:39,column:9}},{start:{line:16,column:8},end:{line:39,column:9}}],line:16},"1":{loc:{start:{line:17,column:12},end:{line:22,column:13}},type:"if",locations:[{start:{line:17,column:12},end:{line:22,column:13}},{start:{line:17,column:12},end:{line:22,column:13}}],line:17},"2":{loc:{start:{line:20,column:17},end:{line:22,column:13}},type:"if",locations:[{start:{line:20,column:17},end:{line:22,column:13}},{start:{line:20,column:17},end:{line:22,column:13}}],line:20},"3":{loc:{start:{line:24,column:13},end:{line:39,column:9}},type:"if",locations:[{start:{line:24,column:13},end:{line:39,column:9}},{start:{line:24,column:13},end:{line:39,column:9}}],line:24},"4":{loc:{start:{line:25,column:12},end:{line:30,column:13}},type:"if",locations:[{start:{line:25,column:12},end:{line:30,column:13}},{start:{line:25,column:12},end:{line:30,column:13}}],line:25},"5":{loc:{start:{line:28,column:17},end:{line:30,column:13}},type:"if",locations:[{start:{line:28,column:17},end:{line:30,column:13}},{start:{line:28,column:17},end:{line:30,column:13}}],line:28},"6":{loc:{start:{line:32,column:13},end:{line:39,column:9}},type:"if",locations:[{start:{line:32,column:13},end:{line:39,column:9}},{start:{line:32,column:13},end:{line:39,column:9}}],line:32},"7":{loc:{start:{line:33,column:12},end:{line:38,column:13}},type:"if",locations:[{start:{line:33,column:12},end:{line:38,column:13}},{start:{line:33,column:12},end:{line:38,column:13}}],line:33},"8":{loc:{start:{line:36,column:17},end:{line:38,column:13}},type:"if",locations:[{start:{line:36,column:17},end:{line:38,column:13}},{start:{line:36,column:17},end:{line:38,column:13}}],line:36}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},inputSourceMap:{version:3,file:"/home/usuario/DSI/P6/src/ejercicio-2/temperatura.ts",sources:["/home/usuario/DSI/P6/src/ejercicio-2/temperatura.ts"],names:[],mappings:";;;AAEA;;GAEG;AACH,MAAa,WAAW;IAEpB,gBAAc,CAAC;IAEf;;;;OAIG;IACH,OAAO,CAAC,IAA8B;QAClC,IAAI,MAAM,GAAW,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAG,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;YACrB,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,YAAY,EAAE;gBACzB,MAAM,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACxD;iBAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;gBAC5B,MAAM,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACtD;SACJ;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;YAC5B,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,YAAY,EAAE;gBACzB,MAAM,GAAG,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACnE;iBAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;gBAC7B,MAAM,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACtD;SACJ;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,YAAY,EAAE;YAChC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;gBACrB,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACrE;iBAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;gBAC7B,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1D;SACJ;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AAhCD,kCAgCC",sourcesContent:["import {isConvertible} from './conversor';\n\n/**\n * Clase que representa unidades de medida de temperatura\n */\nexport class Temperatura implements isConvertible<[string, number, string]> {\n\n    constructor(){}\n\n    /**\n     * Realiza la conversi\xF3n de unidades\n     * @param dato unidad, valor de lo que vamos a camvertir y el 3er attr es a cual convertir\n     * @returns El valor convertido\n     */\n    convert(dato: [string, number, string]): number {\n        let result: number = dato[1];\n        if(dato[0] == 'celsius') {\n            if (dato[2] == 'fahrenheit') {\n                result = parseFloat((dato[1] * 1.8 + 32).toFixed(1));\n            } else if (dato[2] == 'kelvin') {\n                result = parseFloat((dato[1] + 273.15).toFixed(1));\n            }\n        } else if (dato[0] == 'kelvin') {\n            if (dato[2] == 'fahrenheit') {\n                result = parseFloat((1.8 * (dato[1] - 273.15) + 32).toFixed(1));\n            } else if (dato[2] == 'celsius') {\n                result = parseFloat((dato[1] - 273.15).toFixed(1));\n            }\n        } else if (dato[0] == 'fahrenheit') {\n            if (dato[2] == 'kelvin') {\n                result = parseFloat(((5/9) * (dato[1] - 32) + 273.15).toFixed(1));\n            } else if (dato[2] == 'celsius') {\n                result = parseFloat(((dato[1] - 32) / 1.8).toFixed(1));\n            }\n        }\n        return result;\n    }\n}"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ab54fdbe426bfaca05595ec19ba783c854eb3ab4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_17unxe5ky0=function(){return actualCoverage;};}return actualCoverage;}cov_17unxe5ky0();cov_17unxe5ky0().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_17unxe5ky0().s[1]++;exports.Temperatura=void 0;/**
 * Clase que representa unidades de medida de temperatura
 */class Temperatura{constructor(){cov_17unxe5ky0().f[0]++;}/**
     * Realiza la conversi√≥n de unidades
     * @param dato unidad, valor de lo que vamos a camvertir y el 3er attr es a cual convertir
     * @returns El valor convertido
     */convert(dato){cov_17unxe5ky0().f[1]++;let result=(cov_17unxe5ky0().s[2]++,dato[1]);cov_17unxe5ky0().s[3]++;if(dato[0]=='celsius'){cov_17unxe5ky0().b[0][0]++;cov_17unxe5ky0().s[4]++;if(dato[2]=='fahrenheit'){cov_17unxe5ky0().b[1][0]++;cov_17unxe5ky0().s[5]++;result=parseFloat((dato[1]*1.8+32).toFixed(1));}else{cov_17unxe5ky0().b[1][1]++;cov_17unxe5ky0().s[6]++;if(dato[2]=='kelvin'){cov_17unxe5ky0().b[2][0]++;cov_17unxe5ky0().s[7]++;result=parseFloat((dato[1]+273.15).toFixed(1));}else{cov_17unxe5ky0().b[2][1]++;}}}else{cov_17unxe5ky0().b[0][1]++;cov_17unxe5ky0().s[8]++;if(dato[0]=='kelvin'){cov_17unxe5ky0().b[3][0]++;cov_17unxe5ky0().s[9]++;if(dato[2]=='fahrenheit'){cov_17unxe5ky0().b[4][0]++;cov_17unxe5ky0().s[10]++;result=parseFloat((1.8*(dato[1]-273.15)+32).toFixed(1));}else{cov_17unxe5ky0().b[4][1]++;cov_17unxe5ky0().s[11]++;if(dato[2]=='celsius'){cov_17unxe5ky0().b[5][0]++;cov_17unxe5ky0().s[12]++;result=parseFloat((dato[1]-273.15).toFixed(1));}else{cov_17unxe5ky0().b[5][1]++;}}}else{cov_17unxe5ky0().b[3][1]++;cov_17unxe5ky0().s[13]++;if(dato[0]=='fahrenheit'){cov_17unxe5ky0().b[6][0]++;cov_17unxe5ky0().s[14]++;if(dato[2]=='kelvin'){cov_17unxe5ky0().b[7][0]++;cov_17unxe5ky0().s[15]++;result=parseFloat((5/9*(dato[1]-32)+273.15).toFixed(1));}else{cov_17unxe5ky0().b[7][1]++;cov_17unxe5ky0().s[16]++;if(dato[2]=='celsius'){cov_17unxe5ky0().b[8][0]++;cov_17unxe5ky0().s[17]++;result=parseFloat(((dato[1]-32)/1.8).toFixed(1));}else{cov_17unxe5ky0().b[8][1]++;}}}else{cov_17unxe5ky0().b[6][1]++;}}}cov_17unxe5ky0().s[18]++;return result;}}cov_17unxe5ky0().s[19]++;exports.Temperatura=Temperatura;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvdXN1YXJpby9EU0kvUDYvc3JjL2VqZXJjaWNpby0yL3RlbXBlcmF0dXJhLnRzIiwic291cmNlcyI6WyIvaG9tZS91c3VhcmlvL0RTSS9QNi9zcmMvZWplcmNpY2lvLTIvdGVtcGVyYXR1cmEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUE7O0dBRUc7QUFDSCxNQUFhLFdBQVc7SUFFcEIsZ0JBQWMsQ0FBQztJQUVmOzs7O09BSUc7SUFDSCxPQUFPLENBQUMsSUFBOEI7UUFDbEMsSUFBSSxNQUFNLEdBQVcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdCLElBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLFNBQVMsRUFBRTtZQUNyQixJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxZQUFZLEVBQUU7Z0JBQ3pCLE1BQU0sR0FBRyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3hEO2lCQUFNLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLFFBQVEsRUFBRTtnQkFDNUIsTUFBTSxHQUFHLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUN0RDtTQUNKO2FBQU0sSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksUUFBUSxFQUFFO1lBQzVCLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLFlBQVksRUFBRTtnQkFDekIsTUFBTSxHQUFHLFVBQVUsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNuRTtpQkFBTSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxTQUFTLEVBQUU7Z0JBQzdCLE1BQU0sR0FBRyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDdEQ7U0FDSjthQUFNLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLFlBQVksRUFBRTtZQUNoQyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxRQUFRLEVBQUU7Z0JBQ3JCLE1BQU0sR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNyRTtpQkFBTSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxTQUFTLEVBQUU7Z0JBQzdCLE1BQU0sR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUMxRDtTQUNKO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztDQUNKO0FBaENELGtDQWdDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aXNDb252ZXJ0aWJsZX0gZnJvbSAnLi9jb252ZXJzb3InO1xuXG4vKipcbiAqIENsYXNlIHF1ZSByZXByZXNlbnRhIHVuaWRhZGVzIGRlIG1lZGlkYSBkZSB0ZW1wZXJhdHVyYVxuICovXG5leHBvcnQgY2xhc3MgVGVtcGVyYXR1cmEgaW1wbGVtZW50cyBpc0NvbnZlcnRpYmxlPFtzdHJpbmcsIG51bWJlciwgc3RyaW5nXT4ge1xuXG4gICAgY29uc3RydWN0b3IoKXt9XG5cbiAgICAvKipcbiAgICAgKiBSZWFsaXphIGxhIGNvbnZlcnNpw7NuIGRlIHVuaWRhZGVzXG4gICAgICogQHBhcmFtIGRhdG8gdW5pZGFkLCB2YWxvciBkZSBsbyBxdWUgdmFtb3MgYSBjYW12ZXJ0aXIgeSBlbCAzZXIgYXR0ciBlcyBhIGN1YWwgY29udmVydGlyXG4gICAgICogQHJldHVybnMgRWwgdmFsb3IgY29udmVydGlkb1xuICAgICAqL1xuICAgIGNvbnZlcnQoZGF0bzogW3N0cmluZywgbnVtYmVyLCBzdHJpbmddKTogbnVtYmVyIHtcbiAgICAgICAgbGV0IHJlc3VsdDogbnVtYmVyID0gZGF0b1sxXTtcbiAgICAgICAgaWYoZGF0b1swXSA9PSAnY2Vsc2l1cycpIHtcbiAgICAgICAgICAgIGlmIChkYXRvWzJdID09ICdmYWhyZW5oZWl0Jykge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHBhcnNlRmxvYXQoKGRhdG9bMV0gKiAxLjggKyAzMikudG9GaXhlZCgxKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdG9bMl0gPT0gJ2tlbHZpbicpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBwYXJzZUZsb2F0KChkYXRvWzFdICsgMjczLjE1KS50b0ZpeGVkKDEpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChkYXRvWzBdID09ICdrZWx2aW4nKSB7XG4gICAgICAgICAgICBpZiAoZGF0b1syXSA9PSAnZmFocmVuaGVpdCcpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBwYXJzZUZsb2F0KCgxLjggKiAoZGF0b1sxXSAtIDI3My4xNSkgKyAzMikudG9GaXhlZCgxKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdG9bMl0gPT0gJ2NlbHNpdXMnKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcGFyc2VGbG9hdCgoZGF0b1sxXSAtIDI3My4xNSkudG9GaXhlZCgxKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoZGF0b1swXSA9PSAnZmFocmVuaGVpdCcpIHtcbiAgICAgICAgICAgIGlmIChkYXRvWzJdID09ICdrZWx2aW4nKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcGFyc2VGbG9hdCgoKDUvOSkgKiAoZGF0b1sxXSAtIDMyKSArIDI3My4xNSkudG9GaXhlZCgxKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdG9bMl0gPT0gJ2NlbHNpdXMnKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcGFyc2VGbG9hdCgoKGRhdG9bMV0gLSAzMikgLyAxLjgpLnRvRml4ZWQoMSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufSJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VzdWFyaW8vRFNJL1A2L3NyYy9lamVyY2ljaW8tMi90ZW1wZXJhdHVyYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoieTBOQWdCVzsrTkFkWDs7QUFFRyxHQUNILEtBQWEsQ0FBQSxXQUFXLENBRXBCLFdBQUEsRUFBQSx5QkFBZSxDQUVmOzs7O0FBSUcsT0FDSCxPQUFPLENBQUMsSUFBRCxDQUErQix5QkFDbEMsR0FBSSxDQUFBLE1BQU0sMEJBQVcsSUFBSSxDQUFDLENBQUQsQ0FBZixDQUFWLENBRGtDLHdCQUVsQyxHQUFHLElBQUksQ0FBQyxDQUFELENBQUosRUFBVyxTQUFkLENBQXlCLG9EQUNyQixHQUFJLElBQUksQ0FBQyxDQUFELENBQUosRUFBVyxZQUFmLENBQTZCLG9EQUN6QixNQUFNLENBQUcsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUQsQ0FBSixDQUFVLEdBQVYsQ0FBZ0IsRUFBakIsRUFBcUIsT0FBckIsQ0FBNkIsQ0FBN0IsQ0FBRCxDQUFuQixDQUNILENBRkQsSUFFTyx1REFBSSxJQUFJLENBQUMsQ0FBRCxDQUFKLEVBQVcsUUFBZixDQUF5QixvREFDNUIsTUFBTSxDQUFHLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFELENBQUosQ0FBVSxNQUFYLEVBQW1CLE9BQW5CLENBQTJCLENBQTNCLENBQUQsQ0FBbkIsQ0FDSCxDQUZNLGlDQUVOLENBQ0osQ0FORCxJQU1PLHVEQUFJLElBQUksQ0FBQyxDQUFELENBQUosRUFBVyxRQUFmLENBQXlCLG9EQUM1QixHQUFJLElBQUksQ0FBQyxDQUFELENBQUosRUFBVyxZQUFmLENBQTZCLHFEQUN6QixNQUFNLENBQUcsVUFBVSxDQUFDLENBQUMsS0FBTyxJQUFJLENBQUMsQ0FBRCxDQUFKLENBQVUsTUFBakIsRUFBMkIsRUFBNUIsRUFBZ0MsT0FBaEMsQ0FBd0MsQ0FBeEMsQ0FBRCxDQUFuQixDQUNILENBRkQsSUFFTyx3REFBSSxJQUFJLENBQUMsQ0FBRCxDQUFKLEVBQVcsU0FBZixDQUEwQixxREFDN0IsTUFBTSxDQUFHLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFELENBQUosQ0FBVSxNQUFYLEVBQW1CLE9BQW5CLENBQTJCLENBQTNCLENBQUQsQ0FBbkIsQ0FDSCxDQUZNLGlDQUVOLENBQ0osQ0FOTSxJQU1BLHdEQUFJLElBQUksQ0FBQyxDQUFELENBQUosRUFBVyxZQUFmLENBQTZCLHFEQUNoQyxHQUFJLElBQUksQ0FBQyxDQUFELENBQUosRUFBVyxRQUFmLENBQXlCLHFEQUNyQixNQUFNLENBQUcsVUFBVSxDQUFDLENBQUUsRUFBRSxDQUFILEVBQVMsSUFBSSxDQUFDLENBQUQsQ0FBSixDQUFVLEVBQW5CLEVBQXlCLE1BQTFCLEVBQWtDLE9BQWxDLENBQTBDLENBQTFDLENBQUQsQ0FBbkIsQ0FDSCxDQUZELElBRU8sd0RBQUksSUFBSSxDQUFDLENBQUQsQ0FBSixFQUFXLFNBQWYsQ0FBMEIscURBQzdCLE1BQU0sQ0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFELENBQUosQ0FBVSxFQUFYLEVBQWlCLEdBQWxCLEVBQXVCLE9BQXZCLENBQStCLENBQS9CLENBQUQsQ0FBbkIsQ0FDSCxDQUZNLGlDQUVOLENBQ0osQ0FOTSxpQ0FNTixFQXBCaUMseUJBcUJsQyxNQUFPLENBQUEsTUFBUCxDQUNILENBL0JtQixDLHlCQUF4QixPQUFBLENBQUEsV0FBQSxDQUFBLFdBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aXNDb252ZXJ0aWJsZX0gZnJvbSAnLi9jb252ZXJzb3InO1xuXG4vKipcbiAqIENsYXNlIHF1ZSByZXByZXNlbnRhIHVuaWRhZGVzIGRlIG1lZGlkYSBkZSB0ZW1wZXJhdHVyYVxuICovXG5leHBvcnQgY2xhc3MgVGVtcGVyYXR1cmEgaW1wbGVtZW50cyBpc0NvbnZlcnRpYmxlPFtzdHJpbmcsIG51bWJlciwgc3RyaW5nXT4ge1xuXG4gICAgY29uc3RydWN0b3IoKXt9XG5cbiAgICAvKipcbiAgICAgKiBSZWFsaXphIGxhIGNvbnZlcnNpw7NuIGRlIHVuaWRhZGVzXG4gICAgICogQHBhcmFtIGRhdG8gdW5pZGFkLCB2YWxvciBkZSBsbyBxdWUgdmFtb3MgYSBjYW12ZXJ0aXIgeSBlbCAzZXIgYXR0ciBlcyBhIGN1YWwgY29udmVydGlyXG4gICAgICogQHJldHVybnMgRWwgdmFsb3IgY29udmVydGlkb1xuICAgICAqL1xuICAgIGNvbnZlcnQoZGF0bzogW3N0cmluZywgbnVtYmVyLCBzdHJpbmddKTogbnVtYmVyIHtcbiAgICAgICAgbGV0IHJlc3VsdDogbnVtYmVyID0gZGF0b1sxXTtcbiAgICAgICAgaWYoZGF0b1swXSA9PSAnY2Vsc2l1cycpIHtcbiAgICAgICAgICAgIGlmIChkYXRvWzJdID09ICdmYWhyZW5oZWl0Jykge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHBhcnNlRmxvYXQoKGRhdG9bMV0gKiAxLjggKyAzMikudG9GaXhlZCgxKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdG9bMl0gPT0gJ2tlbHZpbicpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBwYXJzZUZsb2F0KChkYXRvWzFdICsgMjczLjE1KS50b0ZpeGVkKDEpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChkYXRvWzBdID09ICdrZWx2aW4nKSB7XG4gICAgICAgICAgICBpZiAoZGF0b1syXSA9PSAnZmFocmVuaGVpdCcpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBwYXJzZUZsb2F0KCgxLjggKiAoZGF0b1sxXSAtIDI3My4xNSkgKyAzMikudG9GaXhlZCgxKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdG9bMl0gPT0gJ2NlbHNpdXMnKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcGFyc2VGbG9hdCgoZGF0b1sxXSAtIDI3My4xNSkudG9GaXhlZCgxKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoZGF0b1swXSA9PSAnZmFocmVuaGVpdCcpIHtcbiAgICAgICAgICAgIGlmIChkYXRvWzJdID09ICdrZWx2aW4nKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcGFyc2VGbG9hdCgoKDUvOSkgKiAoZGF0b1sxXSAtIDMyKSArIDI3My4xNSkudG9GaXhlZCgxKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdG9bMl0gPT0gJ2NlbHNpdXMnKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcGFyc2VGbG9hdCgoKGRhdG9bMV0gLSAzMikgLyAxLjgpLnRvRml4ZWQoMSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufSJdfQ==